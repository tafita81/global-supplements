~/workspace$ ^[[200~git merge --abort
git merge --abortbash: git: command not found
~/workspace$ git push origin main --force~
error: unknown option `force~'
usage: git push [<options>] [<repository> [<refspec>...]]

    -v, --[no-]verbose    be more verbose
    -q, --[no-]quiet      be more quiet
    --[no-]repo <repository>
                          repository
    --[no-]all            push all branches
    --[no-]branches       alias of --all
    --[no-]mirror         mirror all refs
    -d, --[no-]delete     delete refs
    --[no-]tags           push tags (can't be used with --all or --branches or --mirror)
    -n, --[no-]dry-run    dry run
    --[no-]porcelain      machine-readable output
    -f, --[no-]force      force updates
    --[no-]force-with-lease[=<refname>:<expect>]
                          require old value of ref to be at this value
    --[no-]force-if-includes
                          require remote updates to be integrated locally
    --[no-]recurse-submodules (check|on-demand|no)
                          control recursive pushing of submodules
    --[no-]thin           use thin pack
    --[no-]receive-pack <receive-pack>
                          receive pack program
    --[no-]exec <receive-pack>
                          receive pack program
    -u, --[no-]set-upstream
                          set upstream for git pull/status
    --[no-]progress       force progress reporting
    --[no-]prune          prune locally removed refs
    --no-verify           bypass pre-push hook
    --verify              opposite of --no-verify
    --[no-]follow-tags    push missing but relevant tags
    --[no-]signed[=(yes|no|if-asked)]
                          GPG sign the push
    --[no-]atomic         request atomic transaction on remote side
    -o, --[no-]push-option <server-specific>
                          option to transmit
    -4, --ipv4            use IPv4 addresses only
    -6, --ipv6            use IPv6 addresses only

~/workspace$ git merge --abort
git pull origin main --allow-unrelated-histories -X ours
git push origin main
fatal: There is no merge to abort (MERGE_HEAD missing).
From https://github.com/tafita81/global-supplements
 * branch            main       -> FETCH_HEAD
Auto-merging .gitignore
Auto-merging .replit
Auto-merging README.md
Auto-merging index.html
Auto-merging package-lock.json
Auto-merging package.json
Auto-merging src/App.tsx
Auto-merging src/components/layout/PublicHeader.tsx
Auto-merging src/components/layout/TopNavigation.tsx
Auto-merging src/components/premium/PremiumFooter.tsx
Auto-merging src/components/premium/TechWellnessBundles.tsx
Auto-merging src/components/public/PublicAbout.tsx
Auto-merging src/components/public/PublicContact.tsx
Auto-merging src/components/public/PublicCredibility.tsx
Auto-merging src/components/public/PublicHero.tsx
Auto-merging src/components/public/PublicServices.tsx
Auto-merging src/components/ui/language-selector.tsx
Auto-merging src/i18n/locales/ar.json
Auto-merging src/i18n/locales/de.json
Auto-merging src/i18n/locales/en.json
Auto-merging src/i18n/locales/es-US.json
Auto-merging src/i18n/locales/es.json
Auto-merging src/i18n/locales/fr.json
Auto-merging src/i18n/locales/hi.json
Auto-merging src/i18n/locales/it.json
Auto-merging src/i18n/locales/ja.json
Auto-merging src/i18n/locales/ko.json
Auto-merging src/i18n/locales/ms.json
Auto-merging src/i18n/locales/nl.json
Auto-merging src/i18n/locales/pt.json
Auto-merging src/i18n/locales/sv.json
Auto-merging src/i18n/locales/zh-TW.json
Auto-merging src/i18n/locales/zh.json
Auto-merging src/index.css
Auto-merging src/pages/PublicSite.tsx
Auto-merging vite.config.ts
fatal: Could not read from '.git/MERGE_MSG': No such file or directory
To https://github.com/tafita81/global-supplements.git
 ! [rejected]        main -> main (non-fast-forward)
error: failed to push some refs to 'https://github.com/tafita81/global-supplements.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. If you want to integrate the remote changes,
hint: use 'git pull' before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details